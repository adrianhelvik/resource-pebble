// Generated by CoffeeScript 1.10.0
(function() {
  var controller, provide, stripIllegal;

  stripIllegal = require('./stripIllegalFields');

  provide = function(res, type, data) {
    if (res.provide != null) {
      return res.provide(type, data);
    } else if (type === 'success') {
      return res.status(200).json({
        success: true,
        data: data
      });
    } else if (type === 'error') {
      return res.status(500).json({
        success: false,
        data: data
      });
    }
  };

  controller = function(Model) {
    return {
      get: function(req, res, next) {
        return Model.findById(req.params.id(function(err, data) {
          if (err != null) {
            return provide(res, 'error', err);
          }
          return provide(res, 'success', data);
        }));
      },
      all: function(req, res, next) {
        return Model.find({}, function(err, data) {
          if (err != null) {
            return provide(res, 'error', err);
          }
          return provide(res, 'success', data);
        });
      },
      create: function(req, res, next) {
        var instance;
        instance = new Model(stripIllegal(req.body));
        return instance.save(function(err) {
          if (err != null) {
            return provide(res, 'error', err);
          }
          return provide(res, 'success', instance);
        });
      },
      update: function(req, res, next) {
        return Model.findOneAndUpdate(req.params.id, stripIllegal(req.body, function(err, data) {
          if (err != null) {
            return provide(res, 'error', err);
          }
          return provide(res, 'success', data);
        }));
      },
      detroy: function(req, res, next) {
        return Model.findOneAndRemove(req.params.id, function(err, data) {
          if (err != null) {
            return provide(res, 'error', err);
          }
          return provide(res, 'success', data);
        });
      }
    };
  };

}).call(this);
